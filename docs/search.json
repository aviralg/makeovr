[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 makeovr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aviral Goel. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Goel (2022). makeovr: Make-like DSL R. R package version 0.1.","code":"@Manual{,   title = {makeovr: A Make-like DSL for R},   author = {Aviral Goel},   year = {2022},   note = {R package version 0.1}, }"},{"path":"/reference/extquery.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set extension specific reader and writer. — extquery","title":"Get and set extension specific reader and writer. — extquery","text":"functions used set get readers writers extension. enables functions rule_read() rule_write() read write data without explicitly supplied function. ext_set() sets reader writer extension ext_reader() returns reader associated extension. ext_writer() returns writer associated extension.","code":""},{"path":"/reference/extquery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set extension specific reader and writer. — extquery","text":"","code":"ext_set(ext, rdr, wtr)  ext_reader(ext)  ext_writer(ext)"},{"path":"/reference/extquery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set extension specific reader and writer. — extquery","text":"ext File extension (without leading .). rdr Function read files extension. wtr Function write files extension.","code":""},{"path":"/reference/extrw.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write data. — extrw","title":"Read and write data. — extrw","text":"functions read write data based file's extension ext_read() reads contents file. ext_write() writes content file.","code":""},{"path":"/reference/extrw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write data. — extrw","text":"","code":"ext_read(path)  ext_write(path, content)"},{"path":"/reference/extrw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write data. — extrw","text":"path File path. content Data write.","code":""},{"path":"/reference/log.html","id":null,"dir":"Reference","previous_headings":"","what":"Logging inside rules — log","title":"Logging inside rules — log","text":"functions can used logging rule execution. logs printed console retained part rule's execution history.","code":""},{"path":"/reference/log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logging inside rules — log","text":"","code":"rule_log(rule, type, msg)  rule_msg(rule, message, ..., .envir = parent.frame())  rule_dbg(rule, message, ..., .envir = parent.frame())  rule_err(   rule,   message,   ...,   call = .envir,   .envir = parent.frame(),   .frame = .envir )  rule_warn(rule, message, ..., .envir = parent.frame())"},{"path":"/reference/log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logging inside rules — log","text":"rule rule type Log type ... values passed ‘fmt’.  logical, integer, real character vectors supported, coercion done. fmt character vector format strings.","code":""},{"path":"/reference/queryrule.html","id":null,"dir":"Reference","previous_headings":"","what":"Query Rule objects — rule_name","title":"Query Rule objects — rule_name","text":"functions can used query fields rule objects. rule_name() returns rule name. rule_desc() returns rule description. rule_deps() returns named list rule's dependencies. rule_dep() returns rule's dependency given name. rule_target() returns rule's target function. rule_action() returns rule's action function.","code":""},{"path":"/reference/queryrule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query Rule objects — rule_name","text":"","code":"rule_name(rule)  rule_desc(rule)  rule_deps(rule)  rule_dep(rule, name)  rule_target(rule)  rule_action(rule)"},{"path":"/reference/queryrule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query Rule objects — rule_name","text":"rule rule object. name Rule's dependency name.","code":""},{"path":"/reference/queryrule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query Rule objects — rule_name","text":"","code":"q <- rule(\"q\", \"Desc Q\", function(self) FALSE, function(self) print(\"q\")) r <- rule(\"r\", \"Desc R\", function(self) FALSE, function(self) print(\"r\"), q) rule_name(r) #> [1] \"r\" rule_desc(r) #> [1] \"Desc R\" rule_deps(r) #> $q #> rule(\"q\", \"Desc Q\", function (self)  #> FALSE, function (self)  #> print(\"q\")) #>  rule_dep(r, \"q\") #> rule(\"q\", \"Desc Q\", function (self)  #> FALSE, function (self)  #> print(\"q\")) rule_target(r) #> function(self) FALSE #> <environment: 0x7fa733cb33b0> rule_action(r) #> function(self) print(\"r\") #> <environment: 0x7fa733cb33b0>"},{"path":"/reference/read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write data — read","title":"Read and write data — read","text":"functions first construct file path relative rule's data directory read write content. rule_read() reads data. rule_write() writes data.","code":""},{"path":"/reference/read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write data — read","text":"","code":"rule_read(rule, ..., ext = \"\")  rule_write(rule, content, ..., ext = \"\")"},{"path":"/reference/read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write data — read","text":"rule rule object. ... character vectors, values NA, result also NA. paths follow recycling rules used tibble package, namely length 1 arguments recycled. ext optional extension append generated path. content Content write file","code":""},{"path":"/reference/rule.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a new rule. — rule","title":"Make a new rule. — rule","text":"Make new rule.","code":""},{"path":"/reference/rule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a new rule. — rule","text":"","code":"rule(name, desc, target, action, ...)"},{"path":"/reference/rule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a new rule. — rule","text":"name Rule name. desc Rule description. target Rule target function. action Rule action function. ... Rule dependencies.","code":""},{"path":"/reference/rule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a new rule. — rule","text":"","code":"rule(\"slicer\", \"Slice a df\", function(self) FALSE,      function(self, df, len = 10) df[1:len, ]) #> rule(\"slicer\", \"Slice a df\", function (self)  #> FALSE, function (self, df, len = 10)  #> df[1:len, ])"},{"path":"/reference/rule_cmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Command line interface — rule_cmd","title":"Command line interface — rule_cmd","text":"rule_cmd() constructs commmand-line interface rule tree. interface enables rules executed arguments supplied command-line parameters.","code":""},{"path":"/reference/rule_cmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Command line interface — rule_cmd","text":"","code":"rule_cmd(rule, args = commandArgs(trailingOnly = TRUE), arg_parser = NULL)"},{"path":"/reference/rule_cmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Command line interface — rule_cmd","text":"rule Rule object. args Command-line arguments. arg_parser Function parse command-line arguments.","code":""},{"path":"/reference/rule_hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Read history of rule executions. — rule_hist","title":"Read history of rule executions. — rule_hist","text":"Read history rule executions.","code":""},{"path":"/reference/rule_hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read history of rule executions. — rule_hist","text":"","code":"rule_hist(rule, version = NULL)"},{"path":"/reference/rule_hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read history of rule executions. — rule_hist","text":"rule Rule. version Version specification.","code":""},{"path":"/reference/rule_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct path to a file or directory starting from rule's data directory — rule_path","title":"Construct path to a file or directory starting from rule's data directory — rule_path","text":"Construct path file directory starting rule's data directory","code":""},{"path":"/reference/rule_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct path to a file or directory starting from rule's data directory — rule_path","text":"","code":"rule_path(rule, ..., ext = \"\")"},{"path":"/reference/rule_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct path to a file or directory starting from rule's data directory — rule_path","text":"rule rule object. ... character vectors, values NA, result also NA. paths follow recycling rules used tibble package, namely length 1 arguments recycled. ext optional extension append generated path.","code":""},{"path":"/reference/rule_run.html","id":null,"dir":"Reference","previous_headings":"","what":"TODO — rule_run","title":"TODO — rule_run","text":"TODO","code":""},{"path":"/reference/rule_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TODO — rule_run","text":"","code":"rule_run(rule, params)"},{"path":"/reference/rule_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TODO — rule_run","text":"rule Rule. params Parameters.","code":""},{"path":"/reference/rule_web.html","id":null,"dir":"Reference","previous_headings":"","what":"A shiny based web interface for interacting with rules. — rule_web","title":"A shiny based web interface for interacting with rules. — rule_web","text":"shiny based web interface interacting rules.","code":""},{"path":"/reference/rule_web.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A shiny based web interface for interacting with rules. — rule_web","text":"","code":"rule_web(rule, port = 8000)"},{"path":"/reference/rule_web.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A shiny based web interface for interacting with rules. — rule_web","text":"rule Rule. port Port starting shiny server.","code":""}]
